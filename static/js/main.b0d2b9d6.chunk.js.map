{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/Contact-ListItem.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-operations.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","App.jsx","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","addContact","name","number","dispatch","contact","post","then","data","catch","error","deleteContact","contactId","delete","fetchContacts","a","get","ContactForm","state","handleChange","target","value","setState","handleSubmit","event","preventDefault","props","onCreateContact","className","styles","Form","onSubmit","this","Label","Input","type","pattern","title","required","onChange","Button","Component","mapDispatchToProps","phonebookOperations","connect","useStyles","createUseStyles","display","marginBottom","width","fontSize","color","cursor","font","marginTop","borderRadius","border","outline","boxShadow","onChangeFilter","contacts","phonebook","filter","classes","length","ContactListItem","onDelete","List_item","List_button","onClick","ContactList","prevProp","prevState","prevContacts","currentContacts","localStorage","setItem","JSON","stringify","onDeleteItem","List","map","id","styled","ul","toLowerCase","includes","Section","section","App","height","createReducer","_","payload","loading","combineReducers","preloadedState","parse","getItem","store","configureStore","reducer","phonebookReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0d2b9d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__3LeAv\",\"Label\":\"ContactForm_Label__3yFXJ\",\"Input\":\"ContactForm_Input__TZ9Se\",\"Button\":\"ContactForm_Button__3nBzd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List_item\":\"Contact-ListItem_List_item__mIXpk\",\"List_button\":\"Contact-ListItem_List_button__jPigt\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\nexport const fetchContactsError =   createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError =   createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest',);\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess',);\r\nexport const deleteContactError =   createAction('contacts/deleteContactError',);\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import phonebookActionsTypes from './phonebook-actions-types';\r\n// import { v4 as uuidv4 } from 'uuid';         //версія 4 (\"на случайных данных\")\r\n// import { createAction } from '@reduxjs/toolkit';\r\n\r\n\r\n// const addContact = createAction(phonebookActionsTypes.ADD, (name, number) => {\r\n//   return {\r\n//     type: phonebookActionsTypes.ADD,\r\n//     payload: { contact: {\r\n//                   id: uuidv4(),\r\n//                   name,\r\n//                   number\r\n//                 }\r\n//     }\r\n//   }\r\n// });\r\n\r\n// const deleteContact = createAction( phonebookActionsTypes.DELETE );\r\n\r\n// const changeFilter = createAction( phonebookActionsTypes.FILTER );\r\n  \r\n// export default { addContact, deleteContact, changeFilter };\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const addContact = ({name, number}) => ({ \r\n//   type: phonebookActionsTypes.ADD,\r\n//   payload: { contact: { id: uuidv4(), name, number }},\r\n// });\r\n// const deleteContact = (id) => ({\r\n//   type: phonebookActionsTypes.DELETE,\r\n//   payload: { id },\r\n// }); \r\n// const changeFilter = (filter) => ({\r\n//   type: phonebookActionsTypes.FILTER,\r\n//   payload: { filter },\r\n// });","import axios from 'axios';\r\n\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  \r\n  deleteContactRequest,\r\n  deleteContactError,\r\n  deleteContactSuccess,\r\n  // changeFilter\r\n               } from './phonebook-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\nconst addContact = ({ name, number }) => dispatch => {\r\n  const contact = { name, number };\r\n\r\n  dispatch(addContactRequest);\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst deleteContact = contactId => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport default { addContact, deleteContact, fetchContacts };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import axios from \"axios\";\r\n\r\n// import contactsActions from \"./contactsActions\";\r\n\r\n// axios.defaults.baseURL = \"http://localhost:4040\";\r\n\r\n\r\n// const addContact = (name, number) => (dispatch) => {\r\n//   dispatch(contactsActions.addContactRequest());\r\n\r\n//   axios\r\n//     .post(\"/contacts\", { name, number })\r\n//     .then(({ data }) => dispatch(contactsActions.addContactSuccess(data)))\r\n//     .catch((error) => dispatch(contactsActions.addContactError(error)));\r\n// };\r\n\r\n\r\n// const fetchContacts = () => (dispatch) => {\r\n//   dispatch(contactsActions.fetchContactsRequest());\r\n\r\n//   axios\r\n//     .get(\"/contacts\")\r\n//     .then(({ data }) => dispatch(contactsActions.fetchContactsSuccess(data)))\r\n//     .catch((error) => dispatch(contactsActions.fetchContactsError(error)));\r\n// };\r\n\r\n\r\n// const deleteContact = (id) => (dispatch) => {\r\n//   dispatch(contactsActions.deleteContactRequest());\r\n\r\n//   axios\r\n//     .delete(`/contacts/${id}`)\r\n//     .then(() => dispatch(contactsActions.deleteContactSuccess(id)))\r\n//     .catch((error) => dispatch(contactsActions.deleteContactError(error)));\r\n// };\r\n\r\n// export default { addContact, fetchContacts, deleteContact, };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // const fetchData = () => {\r\n// //   return axios.get(`/`).then((res) => {\r\n// //     console.log(res);\r\n// //     return res;\r\n// //   });\r\n// // };\r\n\r\n// const postContact = ({ name, number }) => {\r\n//   return axios.post(`/contacts`, { name, number }).then(({ data }) => {\r\n//     return data;\r\n//   });\r\n// };\r\n\r\n// const fetchContacts = () => {\r\n//   return axios.get(`/contacts`).then(({ data }) => {\r\n//     return data;\r\n//   });\r\n// };\r\n\r\n// const deleteContact = ({ id }) => {\r\n//   return axios.delete(`/contacts/${id}`).then(() => {\r\n//     return id;\r\n//   });\r\n// };\r\n\r\n// export default {\r\n//   fetchContacts,\r\n//   postContact,\r\n//   deleteContact,\r\n//   // fetchData,\r\n// };","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\n//import phonebookActions from '../../redux/phonebook/phonebook-actions';\r\nimport phonebookOperations from '../../redux/phonebook/phonebook-operations';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    if (name && number) {\r\n      this.props.onCreateContact(this.state.name, this.state.number);\r\n      return this.setState({ name: '', number: '' });  // alert (...) is already in contacts`);\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <form className={styles.Form} onSubmit={this.handleSubmit}>\r\n        \r\n<label className={styles.Label}>\r\n            Name\r\n            <input\r\n                className={styles.Input}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label className={styles.Label}>\r\n            Number\r\n            <input\r\n                className={styles.Input}\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n                title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n                required\r\n                value={this.state.number}\r\n                onChange={this.handleChange}\r\n            />\r\n          </label>\r\n            <button className={styles.Button} type=\"submit\">\r\n              Add contact\r\n            </button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onCreateContact: phonebookOperations.addContact,\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onCreateContact: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)  (ContactForm);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n//import phonebookActions from '../../redux/phonebook/phonebook-actions';\r\nimport phonebookOperations from '../../redux/phonebook/phonebook-operations';\r\n\r\n    import { createUseStyles } from 'react-jss';\r\n\r\n    const useStyles = createUseStyles({\r\n        Label:{\r\n            display: 'inline-block',\r\n            marginBottom: 16,\r\n            width: 200,\r\n            fontSize: 16,\r\n            color: '#171718',\r\n            cursor: 'pointer',\r\n            }, \r\n         \r\n        Input: {\r\n            color: '#171718',\r\n            font: 'inherit',\r\n            fontSize: '0.9rem',\r\n            marginTop: 6,\r\n            borderRadius: 4,\r\n            border: '1px solid #9e9d9d',\r\n            width: 200,\r\n            outline: 0,\r\n            '&:focus': {\r\n                border: '2px solid blue',\r\n                boxShadow: '1px 1px 3px 1px rgba(41, 107, 250, 0.14)',\r\n                },\r\n            }\r\n        });\r\n\r\nfunction Filter({ contacts,  value, onChangeFilter }) {\r\n  const classes = useStyles();\r\n\r\n  if (contacts.length > 1) {\r\n    return (\r\n      <div className = {classes.Label}>\r\n        Find contacts by name\r\n        <input className={classes.Input}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={value}\r\n          onChange={event => onChangeFilter(event.target.value)} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.phonebook.contacts,\r\n    value: state.phonebook.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: phonebookOperations.changeFilter,\r\n};\r\n\r\nFilter.propTypes = {\r\n  contacts: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onchangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)  (Filter);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./Contact-ListItem.module.css\";\r\n\r\nconst ContactListItem = ({ name, number, onDelete }) => {\r\n  return (\r\n    <li className= {styles.List_item}>\r\n      {\"• \" + name + \":   \" + number}\r\n      <button className={styles.List_button}\r\n              type=\"button\"\r\n              name=\"delete\"\r\n              onClick={onDelete}\r\n      >\r\n          Delete\r\n      </button>\r\n    </li>\r\n  )\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired\r\n};\r\n\r\nexport default  ContactListItem;\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport styled from 'styled-components'\r\n\r\nimport ContactListItem from './ContactListItem';\r\n//import phonebookActions from '../../redux/phonebook/phonebook-actions';\r\nimport phonebookOperations from '../../redux/phonebook/phonebook-operations';\r\nclass ContactList extends Component {\r\n\r\n  componentDidUpdate(prevProp, prevState) {\r\n    const prevContacts = prevProp.contacts;\r\n    const currentContacts = this.props.contacts;\r\n\r\n    if (prevContacts !== currentContacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(currentContacts));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { contacts, onDeleteItem } = this.props;\r\n\r\n    if (contacts.length < 1) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <List>\r\n        {contacts.map(({ id, name, number }) => {\r\n          return (\r\n            <ContactListItem\r\n              key={id}\r\n              name={name}\r\n              number={number}\r\n              onDelete={() => onDeleteItem(id)}\r\n            />\r\n          );\r\n        })}\r\n      </List>\r\n    )\r\n  }\r\n}\r\n\r\nconst List = styled.ul`\r\n  width: 500px;\r\n`;\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  const { contacts, filter } = state.phonebook;\r\n  const visibleContacts = contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\r\n\r\n  return {\r\n    contacts: visibleContacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onDeleteItem: phonebookOperations.deleteContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from 'react';\nimport styled from 'styled-components'\nimport Spinner from 'react-loader-spinner';\nimport AddContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nconst App = () => {\n\n  return (\n      <>\n        <Section>\n          <h1>Phonebook</h1>\n          <AddContactForm />\n        </Section>\n      \n        <Section>\n          <h2>Contacts</h2>\n          {/* {contacts.length > 1 && <Filter />}\n        {loading ? (\n            <Spinner type=\"TailSpin\" color=\"#00BFFF\" height={60} width={60} className=\"Spinner\" />\n               ) : (\n            <ContactList />\n          )} */}\n         <Filter />\n             <Spinner type=\"TailSpin\" color=\"#00BFFF\" height={60} width={60} className=\"Spinner\" />\n          <ContactList />\n        </Section>\n      </>  \n  )\n}\n\n\n        // const mapStateToProps = state => {\n        //   return {\n        //     contacts: state.phonebook.contacts,\n        //     value: state.phonebook.filter,\n        //   };\n        // };\n\n\nconst Section = styled.section`\n  &:not(:last-of-type) {\n    margin-bottom: 40px;\n  }\n`;\n\nexport default App;","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  \r\n  deleteContactRequest,\r\n  deleteContactError,\r\n  deleteContactSuccess,\r\n  changeFilter } from './phonebook-actions';\r\n\r\nconst initContacts = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"+38-044-459-1256\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"+38-041-443-8912\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"+38-048-645-1779\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"+38-042-227-9126\" },\r\n];\r\n\r\n                            /* reducers */\r\nconst contacts = createReducer(initContacts, {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false\r\n});\r\n\r\nexport default combineReducers({ contacts, filter, loading });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { combineReducers } from 'redux';\r\n// import { createReducer } from '@reduxjs/toolkit';\r\n// import phonebookActions from './phonebook-actions';\r\n\r\n// const initContacts = [\r\n//   { id: \"id-1\", name: \"Rosie Simpson\", number: \"+38-044-459-1256\" },\r\n//   { id: \"id-2\", name: \"Hermione Kline\", number: \"+38-041-443-8912\" },\r\n//   { id: \"id-3\", name: \"Eden Clements\", number: \"+38-048-645-1779\" },\r\n//   { id: \"id-4\", name: \"Annie Copeland\", number: \"+38-042-227-9126\" },\r\n// ];\r\n\r\n\r\n// const addContact = (state, action) => {\r\n//   if (state.find(contact => contact.name === action.payload.contact.name)) {\r\n//     alert(`${action.payload.contact.name} is already in contacts`);\r\n//     return state\r\n//   }\r\n\r\n//   return [...state, action.payload.contact]\r\n// }\r\n\r\n// const deleteContact = (state, action) => {\r\n//   return state.filter(({ id }) => id !== action.payload);\r\n// }\r\n\r\n// const changeFilter = (state, action) => {\r\n//   return action.payload\r\n// }\r\n\r\n//                             /* reducers */\r\n// const contacts = createReducer(initContacts, {  \r\n//   [phonebookActions.addContact]: addContact,\r\n//   [phonebookActions.deleteContact]: deleteContact,\r\n// });\r\n\r\n// const filter = createReducer ('', {\r\n//   [phonebookActions.changeFilter]: changeFilter,\r\n// });\r\n\r\n\r\n// export default combineReducers({ contacts, filter });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { createReducer } from \"@reduxjs/toolkit\";\r\n// import {addContact, deleteContact, changeFilter } from \"./phonebook-actions\";\r\n\r\n\r\n// const contacts = [\r\n//   { id: \"id-1\", name: \"Rosie Simpson\", number: \"+38-044-459-1256\" },\r\n//   { id: \"id-2\", name: \"Hermione Kline\", number: \"+38-041-443-8912\" },\r\n//   { id: \"id-3\", name: \"Eden Clements\", number: \"+38-048-645-1779\" },\r\n//   { id: \"id-4\", name: \"Annie Copeland\", number: \"+38-042-227-9126\" },\r\n// ];\r\n\r\n// const contactsReducer = createReducer(contacts, {\r\n//   [addContact]: (state, { payload }) => [...state, payload],\r\n//   [deleteContact]: (state, { payload }) =>\r\n//     state.filter((contact) => contact.id !== payload),\r\n//  //[getContactsFromLS]: (state, { payload }) => payload,\r\n//   [changeFilter]: (state, { payload }) => payload,\r\n// });\r\n\r\n// export default contactsReducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\n\r\nconst preloadedState = {\r\n  phonebook: {\r\n    contacts: JSON.parse(localStorage.getItem('contacts')) || []\r\n  }\r\n}\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: phonebookReducer\r\n  },\r\n  preloadedState\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './styles.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root')\n);\n"],"sourceRoot":""}